apiVersion: apps/v1
kind: Deployment
metadata:
  name: investmentai-app
  namespace: investmentai
  labels:
    app: investmentai
    component: app
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: investmentai
      component: app
  template:
    metadata:
      labels:
        app: investmentai
        component: app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: investmentai
        image: investmentai:latest
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: investmentai-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: investmentai-secrets
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: investmentai-secrets
              key: secret-key
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: investmentai-secrets
              key: encryption-key
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: investmentai-secrets
              key: jwt-secret-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: app-data
          mountPath: /app/data
        - name: app-logs
          mountPath: /app/logs
        - name: app-cache
          mountPath: /app/cache
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: investmentai-data
      - name: app-logs
        persistentVolumeClaim:
          claimName: investmentai-logs
      - name: app-cache
        emptyDir:
          sizeLimit: 1Gi
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: investmentai-worker
  namespace: investmentai
  labels:
    app: investmentai
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: investmentai
      component: worker
  template:
    metadata:
      labels:
        app: investmentai
        component: worker
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: worker
        image: investmentai:latest
        command: ["python", "scripts/run_background_worker.py"]
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: WORKER_MODE
          value: "true"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: investmentai-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: investmentai-secrets
              key: redis-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        volumeMounts:
        - name: app-data
          mountPath: /app/data
        - name: app-models
          mountPath: /app/models
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: investmentai-data
      - name: app-models
        persistentVolumeClaim:
          claimName: investmentai-models