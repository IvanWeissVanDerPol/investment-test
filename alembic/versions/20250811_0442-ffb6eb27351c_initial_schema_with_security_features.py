"""Initial schema with security features

Revision ID: ffb6eb27351c
Revises: 
Create Date: 2025-08-11 04:42:38.495392

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ffb6eb27351c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('market_data',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('open', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('high', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('low', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('close', sa.DECIMAL(precision=20, scale=8), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('is_adjusted', sa.Boolean(), nullable=True),
    sa.Column('fetched_at', sa.DateTime(), nullable=True),
    sa.Column('ttl_seconds', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol', 'timestamp', 'source', name='uq_market_data')
    )
    op.create_index('idx_market_symbol_time', 'market_data', ['symbol', 'timestamp'], unique=False)
    op.create_index(op.f('ix_market_data_symbol'), 'market_data', ['symbol'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('tier', sa.Enum('FREE', 'STARTER', 'PRO', 'ENTERPRISE', name='usertier'), nullable=False),
    sa.Column('api_key_id', sa.String(length=64), nullable=True),
    sa.Column('api_key_hash', sa.String(length=255), nullable=True),
    sa.Column('api_key_created_at', sa.DateTime(), nullable=True),
    sa.Column('api_key_last_used', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_token', sa.String(length=255), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('two_factor_secret', sa.String(length=255), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_api_key_id'), 'users', ['api_key_id'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('api_usage',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('endpoint', sa.String(length=255), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('units', sa.Integer(), nullable=True),
    sa.Column('credits_used', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('request_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_usage_endpoint', 'api_usage', ['endpoint', 'created_at'], unique=False)
    op.create_index('idx_usage_user_created', 'api_usage', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_api_usage_created_at'), 'api_usage', ['created_at'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('event_category', sa.String(length=50), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('request_id', sa.UUID(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('old_value', sa.JSON(), nullable=True),
    sa.Column('new_value', sa.JSON(), nullable=True),
    sa.Column('risk_score', sa.Integer(), nullable=True),
    sa.Column('flagged', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_event_created', 'audit_logs', ['event_type', 'created_at'], unique=False)
    op.create_index('idx_audit_flagged', 'audit_logs', ['flagged', 'created_at'], unique=False)
    op.create_index('idx_audit_user_created', 'audit_logs', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_event_type'), 'audit_logs', ['event_type'], unique=False)
    op.create_table('signals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('signal_type', sa.Enum('BUY', 'SELL', 'HOLD', name='signaltype'), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('rsi', sa.Float(), nullable=True),
    sa.Column('sma_20', sa.Float(), nullable=True),
    sa.Column('sma_50', sa.Float(), nullable=True),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.Column('indicators', sa.JSON(), nullable=True),
    sa.Column('reasoning', sa.Text(), nullable=True),
    sa.Column('ai_enhanced', sa.Boolean(), nullable=True),
    sa.Column('entry_price', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('exit_price', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('profit_loss', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_signal_created', 'signals', ['created_at'], unique=False)
    op.create_index('idx_signal_user_symbol', 'signals', ['user_id', 'symbol', 'created_at'], unique=False)
    op.create_index(op.f('ix_signals_created_at'), 'signals', ['created_at'], unique=False)
    op.create_index(op.f('ix_signals_symbol'), 'signals', ['symbol'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tier', sa.Enum('FREE', 'STARTER', 'PRO', 'ENTERPRISE', name='usertier'), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_payment_method_id', sa.String(length=255), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('interval', sa.String(length=20), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('api_calls_limit', sa.Integer(), nullable=True),
    sa.Column('symbols_limit', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_index('idx_subscription_user_status', 'subscriptions', ['user_id', 'status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_subscription_user_status', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_signals_symbol'), table_name='signals')
    op.drop_index(op.f('ix_signals_created_at'), table_name='signals')
    op.drop_index('idx_signal_user_symbol', table_name='signals')
    op.drop_index('idx_signal_created', table_name='signals')
    op.drop_table('signals')
    op.drop_index(op.f('ix_audit_logs_event_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index('idx_audit_user_created', table_name='audit_logs')
    op.drop_index('idx_audit_flagged', table_name='audit_logs')
    op.drop_index('idx_audit_event_created', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_api_usage_created_at'), table_name='api_usage')
    op.drop_index('idx_usage_user_created', table_name='api_usage')
    op.drop_index('idx_usage_endpoint', table_name='api_usage')
    op.drop_table('api_usage')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_api_key_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_market_data_symbol'), table_name='market_data')
    op.drop_index('idx_market_symbol_time', table_name='market_data')
    op.drop_table('market_data')
    # ### end Alembic commands ###